7/
Напишите программу на Python, чтобы определить, 
какой товар приносит наибольшую прибыль, сравнив стоимость покупки (из purchase.csv) и 
цену продажи (из sales.csv).
8.
Объедините purchase.csv и sales.csv, чтобы проанализировать, продал ли магазин больше товаров, чем приобрел, за определенный период времени.
9.
Используя clients.csv, sales.csv и items.csv, напишите программу, чтобы определить клиента, который купил наибольшее количество определенного товара.
10.
Напишите программу на Python, которая использует данные из distributor.csv и purchase.csv, чтобы узнать, какой дистрибьютор поставил больше всего разных товаров в магазин.
11.
Объедините sales.csv и items.csv, чтобы рассчитать среднюю цену продажи каждого товара в магазине.
12.
Напишите программу на Python, чтобы рассчитать общий доход от клиентов, которые купили товары у определенного дистрибьютора, используя данные из sales.csv, clients.csv и distributor.csv.
13.
Используя items.csv, purchase.csv и sales.csv, выясните, какой товар имеет наибольший товарооборот (т.е. наиболее часто покупаемый и продаваемый).
14.
Объедините purchase.csv, distributor.csv и sales.csv, чтобы узнать, какой доход от продаж был получен от товаров, поставляемых каждым дистрибьютором.
15.
Используя clients.csv, sales.csv и items.csv, определите, какой товар чаще всего покупают постоянные клиенты.
16.
Напишите программу на Python, чтобы рассчитать среднюю стоимость товаров, купленных у каждого дистрибьютора, и сравнить её со средней ценой продажи клиентам, используя данные из purchase.csv, distributor.csv и sales.csv.
17.
Объедините sales.csv и purchase.csv, чтобы проанализировать общее количество товаров, купленных у дистрибьюторов, по сравнению с общим количеством проданных товаров клиентам для каждого товара.
18.
Напишите программу на Python, которая использует данные из distributor.csv, purchase.csv и sales.csv, чтобы сгенерировать отчет о том, какие товары дистрибьютора приносят наибольший доход от продаж.
19.
Используя данные clients.csv и sales.csv, напишите программу, чтобы определить, какие клиенты принесли наибольший доход в магазин за определенный период времени.
20.
Объедините sales.csv, items.csv и purchase.csv, чтобы выяснить, есть ли товары, которые магазин продал в большем количестве, чем купил у дистрибьюторов.
21.
Используя clients.csv, sales.csv и items.csv, рассчитайте среднее количество каждого товара, приобретенного клиентами при оптовых заказах (более определенного количества).
22.
Напишите программу на Python, которая использует данные из purchase.csv, items.csv и sales.csv, чтобы определить товары, которые часто покупаются у дистрибьюторов, но редко продаются клиентам.
23.
Объедините distributor.csv, purchase.csv и sales.csv, чтобы сгенерировать отчет, показывающий среднее время между покупкой товара у дистрибьютора и его продажей клиенту.
24.
Используя clients.csv, sales.csv и items.csv, найдите самые популярные товары среди клиентов, которые сделали покупки на сумму выше определенного порога.
25.
Напишите программу на Python, чтобы проанализировать, какую долю от общего дохода приносят товары, купленные у топ-3 дистрибьюторов, используя данные из distributor.csv, purchase.csv и sales.csv.
26.
Объедините items.csv и sales.csv, чтобы рассчитать общее количество проданных товаров и сравнить его с общим количеством товаров, имеющихся на складе.
27.
Используя данные из distributor.csv, purchase.csv и sales.csv, выясните, товары какого дистрибьютора приносят наибольшую среднюю цену при продаже клиентам.
28.
Объедините clients.csv, sales.csv и items.csv, чтобы определить клиентов, которые купили все товары из определенной категории или группы товаров.
29.
Напишите программу на Python, которая объединяет данные из purchase.csv и sales.csv, чтобы проанализировать маржу прибыли для каждого дистрибьютора, сравнивая стоимость покупки товаров с доходом от их продажи.
30.
Используя clients.csv, sales.csv, purchase.csv и items.csv, создайте отчет, который покажет клиента, купившего наибольшее разнообразие товаров в магазине.